---
# Copyright 2019 Stephen Shirley, Anapaya Systems
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Ensure ansible version is new enough
  # reset_connection was broken before 2.6.0:
  # - https://github.com/ansible/ansible/issues/27520
  # warning for conditional on meta was broken before 2.6.8:
  # - https://github.com/ansible/ansible/issues/46275
  assert:
    that: "ansible_version.full is version('2.6.8', '>=')"
    msg: "This role requires ansible >= 2.6.8"

- name: Install iptables and related tools
  apt: name={{ item }} state=present cache_valid_time=86400
  with_items:
    - conntrack
    - iptables
    - iptables-persistent
- name: Install rules.v4.ansible
  template:
    src: files/iptables/rules.v4.tmpl
    dest: /etc/iptables/rules.v4.ansible
    validate: iptables-restore -t %s
  register: rules_v4
- name: Install ansible-iptables-apply script
  copy:
    src: files/iptables/ansible-iptables-apply.sh
    dest: /usr/local/sbin/ansible-iptables-apply
    mode: "0755"
  register: iptables_apply

- block:
  - name: Create tempdir
    # Create a tempdir using ansible so we can use it in multiple tasks
    tempfile:
      state: directory
      suffix: .iptablesv4
    register: tmpdir_v4
  - debug:
    # Output the tempdir, for debugging purposes.
      msg: "Tempdir: {{ tmpdir_v4.path }}"
  - name: Apply rules.v4
    command: ansible-iptables-apply 4 /etc/iptables/rules.v4.ansible
    args:
      chdir: "{{ tmpdir_v4.path }}"
  when: (rules_v4.changed or iptables_apply.changed) and not ansible_check_mode

- name: Force reconnection
  # Ensure that new connections will also be accepted.
  # (This prints a warning if it's inside a conditional, sigh.)
  meta: reset_connection

- block:
  - name: Signal that the new rules haven't killed connectivity
    file:
      path: "{{ tmpdir_v4.path }}/ok"
      state: touch
  - name: Wait for failsafe return code.
    wait_for:
      path: "{{ tmpdir_v4.path }}/failsafe.rc"
      state: present
      timeout: 10
  - name: Check if failsafe encountered any errors.
    shell: '[[ $(<failsafe.rc) == 0 ]] || { cat log; exit 1; }'
    args:
      executable: /bin/bash
      chdir: "{{ tmpdir_v4.path }}"
  - name: Install new rules to /etc/iptables/rules.v4
    copy:
      src: /etc/iptables/rules.v4.ansible
      dest: /etc/iptables/rules.v4
      remote_src: yes
  - name: Remove tempdir
    file:
      path: "{{ tmpdir_v4.path }}"
      state: absent
  when: (rules_v4.changed or iptables_apply.changed) and not ansible_check_mode
